{{-- Autogenerated with `swagger:generate`. Do not modify this file directly. --}}
{
    "swagger": "2.0",
    "info": {
        "title": "Leadgen API",
        "version": "0.1-beta"
    },
    "host": "{{ $host }}",
    "basePath": "/api/v1",
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "paths": {
        "/customer": {
            "get": {
                "tags": [
                    "customer"
                ],
                "summary": "Retrieve a list of customers",
                "description": "Retrieves a list of customers with pagination support.",
                "operationId": "customer.index",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page to be retrieved",
                        "required": false,
                        "type": "integer",
                        "default": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Customer data",
                        "schema": {
                            "properties": {
                                "status": {
                                    "description": "Response status",
                                    "type": "string"
                                },
                                "content": {
                                    "description": "Display a listing of the resource.",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Customer"
                                    }
                                },
                                "errors": {
                                    "description": "Array of error messages",
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/customer/{id}": {
            "get": {
                "tags": [
                    "customer"
                ],
                "summary": "Retrieve a specific customer",
                "description": "You can retrieve a customer by it's _id or email",
                "operationId": "customer.show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "_id or email of the customer to be retrieved",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Customer data",
                        "schema": {
                            "properties": {
                                "status": {
                                    "description": "Response status",
                                    "type": "string"
                                },
                                "content": {
                                    "description": "Retrieve a specific customer.",
                                    "$ref": "#/definitions/Customer"
                                },
                                "errors": {
                                    "description": "Array of error messages",
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "Customer not found"
                    }
                }
            }
        },
        "/customer/query/{segmentQuery}": {
            "get": {
                "tags": [
                    "customer"
                ],
                "summary": "Retrieve a list of customers that matches the given segment query",
                "description": "Retrieve a list of customers that matches with pagination support.",
                "operationId": "customer.query",
                "parameters": [
                    {
                        "name": "segmentQuery",
                        "in": "path",
                        "description": "Segment query to filter customers. In json format",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page to be retrieved",
                        "required": false,
                        "type": "integer",
                        "default": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Customer data",
                        "schema": {
                            "properties": {
                                "status": {
                                    "description": "Response status",
                                    "type": "string"
                                },
                                "content": {
                                    "description": "Retrieves a list of customers that match the given segment query",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Customer"
                                    }
                                },
                                "errors": {
                                    "description": "Array of error messages",
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/interaction": {
            "post": {
                "tags": [
                    "interaction"
                ],
                "summary": "Stores a new interaction",
                "description": "Stores a new customer interaction.",
                "operationId": "interaction.store",
                "parameters": [
                    {
                        "name": "interaction",
                        "in": "body",
                        "description": "Interaction to be stored",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Interaction"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Interaction data",
                        "schema": {
                            "properties": {
                                "status": {
                                    "description": "Response status",
                                    "type": "string"
                                },
                                "content": {
                                    "description": "Stores a new resource",
                                    "$ref": "#/definitions/Interaction"
                                },
                                "errors": {
                                    "description": "Array of error messages",
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "properties": {
                                "status": {
                                    "description": "Response status",
                                    "type": "string"
                                },
                                "errors": {
                                    "description": "Array of error messages",
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "Customer": {
            "properties": {
                "_id": {
                    "description": "Unique identifier of the customer. (Generated automatically)",
                    "type": "string"
                },
                "docNumber": {
                    "description": "An document number that identify this customer. May be an CRM number for example.",
                    "type": "string"
                },
                "email": {
                    "description": "Email of the customer.",
                    "type": "string"
                },
                "name": {
                    "description": "Name of the customer.",
                    "type": "string"
                },
                "interactions": {
                    "description": "Interactions that this customer has made.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Interaction"
                    }
                }
            },
            "type": "object"
        },
        "Interaction": {
            "required": [
                "author",
                "interaction"
            ],
            "properties": {
                "_id": {
                    "description": "Unique identifier of the interaction. (Generated automatically)",
                    "type": "string"
                },
                "author": {
                    "description": "Email or docNumber of the customer that made the interaction.",
                    "type": "string"
                },
                "authorId": {
                    "description": "Unique identifier of the customer that made the interaction. (Generated based in the `author` property)",
                    "type": "string"
                },
                "interaction": {
                    "description": "Unique identifier of the `InteractionType` that describes this interaction.",
                    "type": "string"
                },
                "params": {
                    "description": "The params of the interaction. A set of key-value properties that should follow the params described in the `InteractionType`.",
                    "type": "object"
                },
                "acknowledged": {
                    "description": "Tells if the given `Interaction` have already been indexed in Elasticsearch.",
                    "type": "boolean",
                    "default": false
                }
            },
            "type": "object"
        },
        "InteractionType": {
            "required": [
                "name",
                "slug",
                "params"
            ],
            "properties": {
                "_id": {
                    "description": "Unique identifier. (Generated automatically)",
                    "type": "string"
                },
                "name": {
                    "description": "The name of the interaction type.",
                    "type": "string"
                },
                "slug": {
                    "description": "Slug that identifies the given interaction type. No space or special characters are allowed.",
                    "type": "string"
                },
                "params": {
                    "description": "Params of the given interaction",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Param"
                    }
                }
            },
            "type": "object"
        },
        "Param": {
            "required": [
                "name",
                "type",
                "required"
            ],
            "properties": {
                "_id": {
                    "description": "Unique identifier. (Generated automatically)",
                    "type": "string"
                },
                "name": {
                    "description": "Name of parameter. No space or special characters are allowed.",
                    "type": "string"
                },
                "type": {
                    "description": "Type of the parameter",
                    "type": "string"
                },
                "required": {
                    "description": "Tells if the parameter is required.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "Ruleset": {
            "required": [
                "rules"
            ],
            "properties": {
                "_id": {
                    "description": "Unique identifier of the rule set. (Generated automatically)",
                    "type": "string"
                },
                "rules": {
                    "description": "Rules that determines if a customers is part of the segment.",
                    "type": "array",
                    "items": {
                        "type": "object"
                    }
                }
            },
            "type": "object"
        },
        "Segment": {
            "required": [
                "name",
                "slug",
                "rules"
            ],
            "properties": {
                "_id": {
                    "description": "Unique identifier of the segment. (Generated automatically)",
                    "type": "string"
                },
                "name": {
                    "description": "Name to identify the segment.",
                    "type": "string"
                },
                "slug": {
                    "description": "A clean string to identify the segment.",
                    "type": "string"
                },
                "rules": {
                    "description": "The ruleset that determines if a customers is part of the segment.",
                    "type": "object",
                    "$ref": "#/definitions/Ruleset"
                }
            },
            "type": "object"
        }
    }
}